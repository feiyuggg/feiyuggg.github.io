{"pages":[],"posts":[{"title":"大家好","text":"大家好这是第一支blog","link":"/2020/11/07/hellow-my-friend/"},{"title":"asp.net web api实现api接口发布（配合Oracle数据库）","text":"asp.net web api是属于RESTful架构样式的网络系统，对于restful我们应该很熟悉了，他包括了以下几种特点 每个URL代表这一种资源； 客户端使用GET、POST、PUT、DELETE四个表示操纵方式的动词对服务器资源进行操纵； 通过操纵资源的表现形式来操纵资源 资源的表现形式是XML或者HTML 客户端和服务端之间的交互在请求之间是无状态的，从客户端到服务端的每个请求都必须包含理解请求所必要的信息。 相较于RPC，rest关注点在于资源，而RPC更关注于方法。下面主要介绍了aps.net对接Oracle数据库的方法 1234567891011121314151617181920212223242526272829303132333435363738394041using System;using System.Collections.Generic;using System.Linq;using System.Threading.Tasks;using System.Data;using Oracle.ManagedDataAccess.Client;namespace api.Oracle //这里的Oracle是我的文件夹的名称，api是我的项目名称{ public class Dbconn { //create by Gavan 20201022 public DataSet DbGetTable(String sql) { try { string connstr = &quot;DATA SOURCE = 192.168.0.1/orcl; PASSWORD = xx; PERSIST SECURITY INFO = True; USER ID =xx&quot;;//这里是你的数据库地址，用户以及密码 OracleConnection conn = new OracleConnection(connstr);//连接数据库 if (conn.State == ConnectionState.Closed) { conn.Open(); } OracleCommand command = conn.CreateCommand();//连接完数据库，即要进行数据库操纵，这里创建数据库操纵对象 command.Connection = conn;//使用command对象指向conn，指定操纵的数据库 command.CommandText = string.Format(sql);//存放等待执行的spl语句 OracleDataAdapter oradata = new OracleDataAdapter(); oradata.SelectCommand = command;//获取数据库执行后的数据结果 DataSet dataSet = new DataSet(); oradata.Fill(dataSet);//效率较低，建议使用OracleDataReader + while (reader.Read())进行数据格式处理 command.Parameters.Clear(); conn.Close(); return dataSet; } catch (Exception ex) { Console.Write(ex.Message); return null; } } }}","link":"/2020/11/12/title3/"},{"title":"vue 相对路径图片动态加载，require的用法","text":"在vue中，本地图片如果需要实时刷新，那么就需要进行动态链接，例如下面的代码，我们要实时动态加载一些本地图片，那么需要用到require()进行动态链接 1234567891011&lt;img :src=&quot;url&quot;&gt;&lt;/img&gt;&lt;script&gt; export default{ data(){ return{ url : require('../img'); //此处为相对路径 } } }&lt;/script&gt;&lt;!----&gt; 但是要注意，require()里面是不支持变量，因此我们需要间接转换为字符串进行处理，例如以下代码，我们的处理方式是require(‘../‘ + scope.row.image + ‘’)，此处的scope.row.image属于变量，我们将其转换为字符串即可 12345678910111213141516171819202122232425262728293031323334353637&lt;el-table :data=&quot;tableData&quot; height=&quot;710&quot; border cell-style=&quot;font-weight: 700;&quot; style=&quot;width: 100%;font-size: 20px&quot; &gt; &lt;el-table-column label=&quot;照片&quot; width=&quot;220&quot; align=&quot;center&quot; &gt; &lt;template width=&quot;90&quot; slot-scope=&quot;scope&quot;&gt; &lt;img style=&quot;width:120px;height:150px;border:none;&quot; :src=&quot;require('../' + scope.row.image + '')&quot;&gt; &lt;/template&gt; &lt;/el-table-column&gt;&lt;/el-table&gt;&lt;script&gt; export default{ data(){ return{ tableData:[ {image:&quot;img/1.jpg&quot;}, {image:&quot;img/2.jpg&quot;}, {image:&quot;img/3.jpg&quot;}, {image:&quot;img/4.jpg&quot;}, {image:&quot;img/5.jpg&quot;}, ]; } } //这里我的tableData文件格式使用的是json }&lt;/script&gt;","link":"/2020/11/09/vue-require/"},{"title":"pm2用法，守护你的Linux进程","text":"pm2常常用来进行进程的守护，防止进程随着终端的关闭被关闭下面演示在centos7上安装pm2命令行 123456789101112131415161718192021222324252627#首先安装npmsudo yum install epel-releasesudo yum install nodejs#查看一下npm版本npm -vsudo yum install npm#再次检查版本node -vnpm -v#必要时进行升级npm install -g nn stablen latest#安装具体版本可以选择执行以下命令n v8.9.0#升级npmnpm -g install npm@next#接下来是主要任务，安装pm2npm install -g pm2pm2 -v #查看安装的版本#如果没有出现则需要进行环境变量配置ln -s /usr/local/src/node-v8.9.0-linux-x64/bin/pm2 /usr/local/bin/pm2#至此pm2已经安装完毕 基本的pm2命令行 1234pm2 -h #pm2命令行pm2 start run.js #守护进程pm2 startup #开机自启动pm2 ps #查看进程状态 下面是run.js的写法 1234567891011#run.js的写法如下所示const { exec } = require('child_process') exec('hexo s -p 80',(error, stdout, stderr) =&gt; { #hexo s -p 80 执行hexo命令并开启80端口 if(error){ console.log(`exec error: ${error}`) return } console.log(`stdout: ${stdout}`); console.log(`stderr: ${stderr}`); })","link":"/2020/11/07/pm2%E7%94%A8%E6%B3%95%EF%BC%8C%E5%AE%88%E6%8A%A4%E4%BD%A0%E7%9A%84Linux%E8%BF%9B%E7%A8%8B/"},{"title":"声明","text":"申请友链须知 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名不分先后，刷新后重排，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 本站友链信息如下，申请友链前请先添加本站信息： 网站名称：Gavanの酱 网站地址：https://feiyuggg.github.io 网站简介：后端开发，前段开发，技术分享 加载中，稍等几秒...","link":"/2020/11/07/%E5%A3%B0%E6%98%8E/"},{"title":"正式开启安卓底层开发生涯","text":"大家好，我正式加入荣耀大家庭了，从事安卓方向的开发，具体做多媒体框架。此文章开始，后面开始分享我参与研发过程中遇到的问题与解决方案，同时也会分享工作之外的内容。 上图中，media framework即我所从事的开发方向，在安卓框架中有四层，大致分为应用层；应用框架层；系统库和安卓运行时；Linux内核层，而多媒体引擎在第三层，通过C++库的支撑提供给我们更好的服务。欢迎大家在此给我留言，给我宝贵的建议，我也将我所学所用分享至此。感谢！！！","link":"/2021/04/10/android/"}],"tags":[{"name":"introduce","slug":"introduce","link":"/tags/introduce/"},{"name":"asp","slug":"asp","link":"/tags/asp/"},{"name":"restful","slug":"restful","link":"/tags/restful/"},{"name":"RPC","slug":"RPC","link":"/tags/RPC/"},{"name":"web api","slug":"web-api","link":"/tags/web-api/"},{"name":"vue","slug":"vue","link":"/tags/vue/"},{"name":"js","slug":"js","link":"/tags/js/"},{"name":"linux","slug":"linux","link":"/tags/linux/"},{"name":"pm2","slug":"pm2","link":"/tags/pm2/"},{"name":"声明","slug":"声明","link":"/tags/%E5%A3%B0%E6%98%8E/"},{"name":"android","slug":"android","link":"/tags/android/"},{"name":"media","slug":"media","link":"/tags/media/"}],"categories":[{"name":"api","slug":"api","link":"/categories/api/"},{"name":"前端","slug":"前端","link":"/categories/%E5%89%8D%E7%AB%AF/"},{"name":"linux","slug":"linux","link":"/categories/linux/"},{"name":"声明","slug":"声明","link":"/categories/%E5%A3%B0%E6%98%8E/"},{"name":"android","slug":"android","link":"/categories/android/"}]}